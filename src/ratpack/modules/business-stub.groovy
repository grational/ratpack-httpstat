/*
 * This ratpack file was auto generated by 'gigawatt'
 * @author d7392
 * @date 15-05-2019 15.32
 */
// external
import static ratpack.groovy.Groovy.ratpack
import ratpack.handling.RequestId
import ratpack.http.Request
import ratpack.exec.Blocking
import groovy.json.JsonBuilder
import it.italiaonline.rnd.time.TimeLapse
// internal
import it.italiaonline.rnd.response.Meta
import it.italiaonline.rnd.response.exceptions.Error
import it.italiaonline.rnd.response.exceptions.MetaException

ratpack {
	handlers {
		prefix('v1/swissarmyknife') {
			get('sleep/:time') {
				// request ids
				def requestData = [
					id: get(RequestId).toString(),
					path: get(Request).path,
					qparams: request.queryParams
				]
				// build the json meta section
				def meta = new Meta (
					uuid:    requestData.id,
					path:    requestData.path,
					qparams: requestData.qparams,
					body:    [:]
				)
				// path params
				def time = pathTokens.time

				// check compulsory input paramters
				if ( !time ) throw new MetaException(Error.MISSING_TIME, meta)

				Blocking.get {
					println "[SWISSARMYKNIFE - SLEEP] Incoming request to sleep for ${time}"
					sleep new TimeLapse(time).ms() as long
				}
				.then {
					def result = meta.map() + [
						data: [
							slept: time
						]
					]
					response.send (
						'application/json',
						new JsonBuilder(result).toString()
					)
				}
			}
		}
	}
}
